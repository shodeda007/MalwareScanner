using FileHelpers;
using MalwareScanner.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MalwareScanner.ViewModel
{
    public class MalwareScannerViewModel
    {
        IList<ISuspeciousItem> _suspeciousItems;
        string _suspeciousFilePath;
        private FormMalwareScanner _view;
        public event EventHandler<IList<ISuspeciousItem>> _SuspeciousListFilePath;

        public MalwareScannerViewModel()
        {
        }

        public void Init()
        {
            _view = new FormMalwareScanner(this);
            _view.SuspeciousListFilePathIsValid += ValidSuspeciousFilePathCreated;
            _view.ScanButtonWasClicked += scanButtonWasClicked;
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run();
        }

        public void ValidSuspeciousFilePathCreated(object sender, string filePath)
        {
            _suspeciousFilePath = filePath;
            _suspeciousItems = ParseSuspeciousItems();
            if (_suspeciousItems != null)
            {
                _SuspeciousListFilePath?.Invoke(this, _suspeciousItems);
            }
        }


        private IList<ISuspeciousItem> ParseSuspeciousItems()
        {
            try
            {
                var suspeciousItemsSerializer = new SuspeciousItemsSerializer(_suspeciousFilePath);
                return suspeciousItemsSerializer.Load();
            }
            catch
            {
                MessageBox.Show($"Items serializer for CSV path: {_suspeciousFilePath} failed", "Error", MessageBoxButtons.OKCancel);
            }

            return null;
        }

        public void scanButtonWasClicked(object sender, EventArgs e)
        {
            //activate new thread to populate the suspicious items and invoke another event when it was populated

        }
    }
}

using Scanner.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AzFunctions;
using Microsoft.Azure.WebJobs;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Http.Internal;
using System.Net.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using System.Threading;
using System.Net;
using System.Globalization;
using System.Net.Http.Headers;
using System.Security.Cryptography;

namespace Scanner.Serializers
{
    public class AzureFunctionItemsSerializer
    {
        //private const string STORAGE_ACCOUNT_NAME = "storageaccount198";
        //private const string LOCAL_URI = "http://localhost:7071/api/UploadBlobHttpTriggerFunc";
        private const string AZURE_SERVER_URI = "https://detectionsmalicious20201201010327.azurewebsites.net/api/UploadBlobHttpTriggerFunc";
        //private const string STORAGE_KEY = "XeOy+4HJfX0654tURCv+BC7HLvEO5CN9kH1bWpZrAunYrACg2K6EJ09b0txMWUOtdjnZAnIC1lLUwhRh/Ryn3A==";


        public bool Save(ISuspeciousItem record)
        {
            HttpResponseMessage PostResult = new HttpResponseMessage();
            PostResult.StatusCode = HttpStatusCode.BadRequest;
            string content = string.Empty;

            var task = Task.Run(async () => {

                Thread.Sleep(1000);
                using var client = new HttpClient();
                var sendInfo = new { suspeciousItemName = record.ItemName, suspeciousItemDescription = record.ItemDescription };
                var json = JsonConvert.SerializeObject(sendInfo);

                var data = new StringContent(json, Encoding.UTF8, "application/json");
                PostResult = await client.PostAsync(AZURE_SERVER_URI, data);
                string content = await PostResult.Content.ReadAsStringAsync();

            });

            task.Wait();
            Console.WriteLine(PostResult.StatusCode + " " + content);
            return PostResult.IsSuccessStatusCode;
        }
    }
}

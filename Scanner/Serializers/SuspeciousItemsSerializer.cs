using FileHelpers;
using Scanner.Model;
using Scanner.Serializers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Scanner.ViewModel
{
    public class SuspeciousItemsSerializer
    {
        string _filePath;
        public SuspeciousItemsSerializer(string filePath)
        {
            _filePath = filePath;
        }

        public IList<ISuspeciousItem> Load()
        {
            var suspeciousItems = new List<ISuspeciousItem>();
            var engine = new FileHelperEngine<IndicatorENTT>();
            var records = engine.ReadFile(_filePath);

            foreach (var record in records)
            {
                switch (record.IndicatorType.ToLower())
                {
                    case "hash":
                        suspeciousItems.Add(new HashItem(record.Indicator.Trim()));
                        break;
                    case "domain":
                        suspeciousItems.Add(new DomainItem(record.Indicator.Trim()));
                        break;
                    default:
                        throw new ArgumentException("Indicator type is invalid");
                }
            }
            return suspeciousItems;
        }
    }
}

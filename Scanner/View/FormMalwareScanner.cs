using System;
using System.Collections.Generic;
using System.Windows.Forms;
using Scanner.Utilities;
using Scanner.ViewModel;

namespace Scanner
{
    public partial class FormMalwareScanner : Form
    {
        private IList<Model.ISuspeciousItem> _suspeciousItems;
        private string _suspeciousListFilePath = string.Empty;
        private MalwareScannerViewModel _malwareScannerViewModel;
        private TreeViewUtils _treeViewUtils;

        public event EventHandler<string> SuspeciousListFilePathIsValid;
        public event EventHandler ScanButtonWasClicked;

        public FormMalwareScanner()
        {
            InitializeComponent();
        }

        public void Init(MalwareScannerViewModel malwareScannerViewModel)
        {
            _malwareScannerViewModel = malwareScannerViewModel;
            _malwareScannerViewModel.SuspeciousItemsUpdate += OnSuspeciousItemsRecieved;
            _malwareScannerViewModel.SuspeciousFilePathUpdate += OnValidSuspeciousListFilePath;
            _treeViewUtils = new TreeViewUtils(treeViewTotalItems);
        }

        private void browseFileTextBox_DragDrop(object sender, DragEventArgs e)
        {

        }

        private void browseFileButton_Click(object sender, EventArgs e)
        {
            var fileContent = string.Empty;
            var filePath = string.Empty;

            using (OpenFileDialog openFileDialog = new OpenFileDialog())
            {
                openFileDialog.InitialDirectory = "c:\\";
                openFileDialog.Filter = "txt files (*.txt)|*.txt|All files (*.*)|*.*";
                openFileDialog.FilterIndex = 2;
                openFileDialog.RestoreDirectory = true;

                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    //Get the path of specified file
                    filePath = openFileDialog.FileName;

                    //Read the contents of the file into a stream
                    var fileStream = openFileDialog.OpenFile();


                    browseFileTextBox.Text = openFileDialog.FileName;
                    //SuspeciousItemsSerializer sp = new SuspeciousItemsSerializer(filePath);
                    //sp.Load();


                    // _suspeciousListFilePath = this.folderBrowserDialogSuspeciousItems.SelectedPath;
                    _suspeciousListFilePath = browseFileTextBox.Text;
                    //OnAcquireSuspeciousListFilePath(_suspeciousListFilePath);


                    /*using (StreamReader reader = new StreamReader(fileStream))
                    {
                        fileContent = reader.ReadToEnd();
                        SuspeciousItemsSerializer sp = new SuspeciousItemsSerializer(filePath);
                        sp.Load();
                    }*/

                }
            }

            /*   
               if (this.folderBrowserDialogSuspeciousItems.ShowDialog() == DialogResult.OK)
               {
                   _suspeciousListFilePath = this.folderBrowserDialogSuspeciousItems.SelectedPath;
                   OnAcquireSuspeciousListFilePath(_suspeciousListFilePath);
               }
            */
        }


        protected virtual void OnAcquireSuspeciousListFilePath()
        {
            SuspeciousListFilePathIsValid?.Invoke(this, _suspeciousListFilePath);
        }

        /*
        protected virtual void OnAcquireSuspeciousListFilePath(string e)
        {
            SuspeciousListFilePathIsValid?.Invoke(this, e);
        }
        */
        public void scanButton_Click(object sender, EventArgs e)
        {
            ScanButtonWasClicked?.Invoke(sender, e);
            MalwareScannerViewModel msv = new MalwareScannerViewModel();
            msv.ScanClicked(sender, _suspeciousListFilePath);
            //OnScanButtonWasClicked(this, e);
        }
        
        public void OnSuspeciousItemsRecieved(object sender, IList<Model.ISuspeciousItem> items)
        {
            _suspeciousItems = items;
            _treeViewUtils.Populate(items);
        }

        public void OnValidSuspeciousListFilePath(object sender, string filePath)
        {
            browseFileTextBox.Text = filePath;
        }

        private void treeViewTotalItems_AfterSelect(object sender, TreeViewEventArgs e)
        {

        }
    }
}

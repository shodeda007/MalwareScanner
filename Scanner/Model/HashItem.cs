using Scanner.Utilities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Scanner.Model
{
    public class HashItem : ISuspeciousItem
    {
        public string _itemName;
        public DateTime _dateTime;
        public IList<Detection> PositiveDetections { get; set; }

        public HashItem(string itemName)
        {
            _itemName = itemName;
            _dateTime = DateTime.Now;
            PositiveDetections = new List<Detection>();
        }

        public HashItem()
        {
        }

        public string ItemName => _itemName;

        public string ItemDescription {
            get
            {
                var logBuilder = new StringBuilder();
                logBuilder.Append($"\nHash | ");
                logBuilder.Append($"Name: {_itemName} | dateTime: {_dateTime.ToShortDateString()}");
                logBuilder.Append($"\npositiveDetections:");
                foreach (var positiveDetection in PositiveDetections)
                {
                    logBuilder.Append(PositiveDetections);
                }
                return logBuilder.ToString();
            }
        }

        public override string ToString()
        {
            return ItemDescription;
        }
        public IList<IItemInfo> ChildItems
        {
            get
            {
                var childItems = new List<IItemInfo>();

                if (PositiveDetections != null) { childItems.AddRange(PositiveDetections); };

                return childItems;
            }
        }
    }
}
